#pragma checksum "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7bca02bc655acb1555a95e84af27c9fae70ce95f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Items_Index), @"mvc.1.0.view", @"/Views/Items/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Items/Index.cshtml", typeof(AspNetCore.Views_Items_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\_ViewImports.cshtml"
using Client_Asset;

#line default
#line hidden
#line 2 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\_ViewImports.cshtml"
using Client_Asset.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7bca02bc655acb1555a95e84af27c9fae70ce95f", @"/Views/Items/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ceceb9d7e3030c42bb89055ba1c80573b3d1628", @"/Views/_ViewImports.cshtml")]
    public class Views_Items_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background-color: #F7F7F8"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/DataTables/DataTables-1.10.18/js/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/DataTables/DataTables-1.10.18/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/js/adminlte.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/dist/js/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/plugins/chart.js/Chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(90, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(92, 2180, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "af88160dcd64477cbb04f21333e02066", async() => {
                BeginContext(132, 2133, true);
                WriteLiteral(@"
    <div style=""padding: 25px;"" class=""animated fadeIn"">
        <div class=""row"">
            <div class=""col-md-6"">
                <h5 style=""font-size: 25px;"">Item</h5>
            </div>
            <div class=""col-md-6"">
                <button style=""float: right; margin:5px"" type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#myModal"" data-backdrop=""static"" data-keyboard=""false"" onclick=""ClearScreen();""><i class=""fa fa-plus""></i>&nbsp;&nbsp;&nbsp;Add Data</button>
            </div>
        </div>
        <hr />
        <table id=""table"" align=""center"" class=""table table-hover table-bordered table-responsive-sm table-striped"">
            <thead class=""thead-light"" style=""text-align: center;"">
                <tr>
                    <th>No.</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Stock</th>
                    <th>Infromation</th>
                    <th>Status</th>
                    <th>Brand</th>
  ");
                WriteLiteral(@"                  <th>Supplier</th>
                    <th>Options 1</th>
                    <th>Options 2</th>
                </tr>
            </thead>
            <tbody style=""opacity: 0.7;""></tbody>
        </table>

        <br />
        <br />

        <div class=""card card-success"">
            <div class=""card-header"">
                <h3 class=""card-title"">Bar Chart</h3>

                <div class=""card-tools"">
                    <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                        <i class=""fas fa-minus""></i>
                    </button>
                    <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove""><i class=""fas fa-times""></i></button>
                </div>
            </div>
            <div class=""card-body"">
                <div class=""chart"">
                    <canvas id=""barChart"" style=""min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;""></canvas>
                </div>");
                WriteLiteral("\n            </div>\r\n            <!-- /.card-body -->\r\n        </div>\r\n\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2272, 2745, true);
            WriteLiteral(@"
<!-- /.-body -->

<div class=""modal fade"" id=""myModal"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Item</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                <input type=""hidden"" class=""form-control"" id=""ItemIdText"" placeholder=""Id"" />
                <label for=""name"">Name</label>
                <div class=""input-group mb-3"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"" id=""basic-addon1""><i class=""fa fa-user""></i></span>
                    </div>
                    <input id=""ItemNameText"" type=""text"" class=""form-control"" placeholder=""Name"" required="""">
                </div>
                <label for=""type"">Typ");
            WriteLiteral(@"e</label>
                <div class=""input-group mb-3"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"" id=""basic-addon1""><i class=""fa fa-phone""></i></span>
                    </div>
                    <input id=""ItemTypeText"" type=""text"" class=""form-control"" placeholder=""Type"" required="""">
                </div>
                <label for=""stock"">Stock</label>
                <div class=""input-group mb-3"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"" id=""basic-addon1""><i class=""fa fa-phone""></i></span>
                    </div>
                    <input id=""ItemStockText"" type=""number"" class=""form-control"" placeholder=""Stock"" required="""">
                </div>
                <label for=""address"">Information</label>
                <div class=""form-group"">
                    <textarea id=""ItemIformationText"" name=""infromation"" class=""form-control"" placeholder=""In");
            WriteLiteral(@"fromation"" required=""""></textarea>
                </div>
                <label for=""status"">Status</label>
                <div class=""input-group mb-3"">
                    <div class=""input-group-prepend"">
                        <span class=""input-group-text"" id=""basic-addon1""><i class=""fa fa-envelope-open-text""></i></span>
                    </div>
                    <input id=""ItemStatusText"" type=""text"" class=""form-control"" placeholder=""Status"" required="""">
                </div>
                <label for=""status"">Brand</label>
                <div class=""input-group mb-3"">
                    <select class=""form-control"" id=""BrandItemText"">
                        ");
            EndContext();
            BeginContext(5017, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "625f4bc4171a42bdb75019e19d2f0c50", async() => {
                BeginContext(5034, 16, true);
                WriteLiteral("--Select Brand--");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5059, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 109 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                         foreach (var item in ViewBag.brand)
                        {

#line default
#line hidden
            BeginContext(5150, 28, true);
            WriteLiteral("                            ");
            EndContext();
            BeginContext(5178, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a18419fada3d4b85bbf4c5c17811a0a8", async() => {
                BeginContext(5204, 9, false);
#line 111 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                                                Write(item.Name);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 111 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                               WriteLiteral(item.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5222, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 112 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(5251, 254, true);
            WriteLiteral("                    </select>\r\n                </div>\r\n                <label for=\"status\">Supplier</label>\r\n                <div class=\"input-group mb-3\">\r\n                    <select class=\"form-control\" id=\"SupplierItemText\">\r\n                        ");
            EndContext();
            BeginContext(5505, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5d0c1948b93d432fa71ebc99c2e3c8bc", async() => {
                BeginContext(5522, 19, true);
                WriteLiteral("--Select Supplier--");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5550, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 119 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                         foreach (var item in ViewBag.supplier)
                        {

#line default
#line hidden
            BeginContext(5644, 28, true);
            WriteLiteral("                            ");
            EndContext();
            BeginContext(5672, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "37f6421edc9e48a18d725f813e0bf5d8", async() => {
                BeginContext(5698, 9, false);
#line 121 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                                                Write(item.Name);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 121 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                               WriteLiteral(item.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5716, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 122 "C:\Users\muham\OneDrive\Documents\git_hub_app\Asset_Management\Asset_Management\Client_Asset\Views\Items\Index.cshtml"
                        }

#line default
#line hidden
            BeginContext(5745, 1106, true);
            WriteLiteral(@"                    </select>
                </div>
                <div>
                    <div class=""padding-top: 60px"">
                        <hr>
                        <div class=""form-group"" align=""right"">
                            <button type=""button"" class=""btn btn-success"" id=""Save"" onclick=""Validation();""><i class=""fa fa-check""></i>&nbsp;&nbsp;Save</button>
                            <button type=""button"" class=""btn btn-primary"" id=""Update"" onclick=""Validation();""><i class=""fa fa-edit""></i>&nbsp;&nbsp;Update</button>
                            <button type=""button"" class=""btn btn-primary"" id=""Update_Stock"" onclick=""Edit_2();""><i class=""fa fa-edit""></i>&nbsp;&nbsp;Update Stock</button>
                            <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal""><i class=""fa fa-close""></i>&nbsp;&nbsp;Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.modal-content -->
       ");
            WriteLiteral(" </div>\r\n        <!-- /.modal-dialog -->\r\n    </div>\r\n</div>\r\n<!-- /.modal -->\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(6868, 27, true);
                WriteLiteral("\r\n    <!-- jQuery -->\r\n    ");
                EndContext();
                BeginContext(6895, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4fcaf9dbc2d2453a963c86e3020e39d1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6949, 32, true);
                WriteLiteral("\r\n    <!-- Bootstrap 4 -->\r\n    ");
                EndContext();
                BeginContext(6981, 70, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7139eec9d6ca4e028132583539a44849", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7051, 31, true);
                WriteLiteral("\r\n    <!-- DataTables -->\r\n    ");
                EndContext();
                BeginContext(7082, 106, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd2eaa84bb8546dab5e72ad463d855a7", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7188, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(7194, 110, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c08a967da2014c599b217b56d03ad5d8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7304, 33, true);
                WriteLiteral("\r\n    <!-- AdminLTE App -->\r\n    ");
                EndContext();
                BeginContext(7337, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "259637b1add14a5fb6f17c8a509a4540", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7386, 47, true);
                WriteLiteral("\r\n    <!-- AdminLTE for demo purposes -->\r\n    ");
                EndContext();
                BeginContext(7433, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "712dc307509643a1a3143648417ae729", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7474, 26, true);
                WriteLiteral("\r\n    <!-- Chart -->\r\n    ");
                EndContext();
                BeginContext(7500, 55, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9648b36787ea4b3e959d158127d93242", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7555, 14755, true);
                WriteLiteral(@"

    <script src=""https://cdn.jsdelivr.net/npm/sweetalert2@9""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js""></script>
    <script>

        $(document).ready(function () {
            tabel = $(""#table"").DataTable({
                ""ajax"": {
                    ""url"": ""/Items/List/"",
                    ""type"": ""GET"",
                    ""datatype"": ""json""
                },
                ""columns"": [
                    { ""data"": null },
                    { ""data"": ""name"" },
                    { ""data"": ""type"" },
                    { ""data"": ""stock"" },
                    { ""data"": ""information"" },
                    { ""data"": ""status"" },
                    { ""data"": ""brand_id"" },
                    { ""data"": ""supplier_id"" },
                    {
                        ""render"": function (data, type, row, meta) {
                            return ""<a onclick=GetById('"" + row.id + ""');><i class='fa fa-edit'></i></a> | <a ");
                WriteLiteral(@"onclick= Delete('"" + row.id + ""');><i class='fa fa-trash'></i></a>""
                        }
                    },
                    {
                        ""render"": function (data, type, row, meta) {
                            return ""<a class='btn btn-default' onclick=GetById_2('"" + row.id + ""');><i style='color: black'>Update Stock</i></a>""
                        }
                    }
                ],

                ""columnDefs"": [{
                    ""searchable"": false,
                    ""orderable"": false,
                    ""targets"": 0
                }],
                ""order"": [[1, 'asc']]
            });
            tabel.on('order.dt search.dt', function () {
                tabel.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();



            var areaChartData = {
                labels: ['January', 'February', 'March', 'April', '");
                WriteLiteral(@"May', 'June', 'July'],
                datasets: [
                    {
                        label: 'Digital Goods',
                        backgroundColor: 'rgba(60,141,188,0.9)',
                        borderColor: 'rgba(60,141,188,0.8)',
                        pointRadius: false,
                        pointColor: '#3b8bba',
                        pointStrokeColor: 'rgba(60,141,188,1)',
                        pointHighlightFill: '#fff',
                        pointHighlightStroke: 'rgba(60,141,188,1)',
                        data: [28, 48, 40, 19, 86, 27, 90]
                    },
                ]
            }

            var barChartCanvas = $('#barChart').get(0).getContext('2d')
            var barChartData = jQuery.extend(true, {}, areaChartData)
            var temp0 = areaChartData.datasets[0]
            barChartData.datasets[0] = temp0

            var barChartOptions = {
                responsive: true,
                maintainAspectRatio: false,
           ");
                WriteLiteral(@"     datasetFill: false
            }

            var barChart = new Chart(barChartCanvas, {
                type: 'bar',
                data: barChartData,
                options: barChartOptions
            })
        });

        function Validation() {
            if ($(""#ItemNameText"").val() == """" || $(""#ItemNameText"").val() == "" "") {
                Swal.fire(
                    'Failed!',
                    'Oops',
                    'failed'
                );
            }
            else if ($(""#ItemIdText"").val() == """" || $(""#ItemIdText"").val == "" "") {
                Save();
            }
            else {
                Edit($(""#ItemIdText"").val())
            }
        }

        function ClearScreen() {
            $(""#ItemNameText"").val('');
            $(""#ItemTypeText"").val('');
            $(""#ItemStockText"").val('');
            $(""#ItemIformationText"").val('');
            $(""#ItemStatusText"").val('Available');
            $(""#BrandItemText"").val('");
                WriteLiteral(@"');
            $(""#SupplierItemText"").val('');

            $(""#Update"").hide();
            $(""#Save"").show();
            $(""#Update_Stock"").hide();
            document.getElementById(""ItemNameText"").disabled = false;
            document.getElementById(""ItemTypeText"").disabled = false;
            $('textarea[name=""infromation""]').prop('disabled', false)
            document.getElementById(""ItemStockText"").disabled = false;
            document.getElementById(""ItemStatusText"").disabled = true;
            document.getElementById(""BrandItemText"").disabled = false;
            document.getElementById(""SupplierItemText"").disabled = false;
        }

        function GetById(Id) {
            $.ajax({
                ""url"": ""/Items/GetById/"" + Id,
                ""type"": ""GET"",
                ""datatype"": ""json"",
                ""data"": { Id: Id }
            }).then((result) => {
                if (result.data != null) {
                    $(""#ItemIdText"").val(result.data.id);
    ");
                WriteLiteral(@"                $(""#ItemNameText"").val(result.data.name);
                    $(""#ItemTypeText"").val(result.data.type);
                    $(""#ItemStockText"").val(result.data.stock);
                    $(""#ItemIformationText"").val(result.data.information);
                    $(""#ItemStatusText"").val(result.data.status);
                    $(""#BrandItemText"").val(result.data.brand_id);
                    $(""#SupplierItemText"").val(result.data.supplier_id);

                    document.getElementById(""ItemNameText"").disabled = false;
                    document.getElementById(""ItemTypeText"").disabled = false;
                    $('textarea[name=""infromation""]').prop('disabled', false)
                    document.getElementById(""ItemStockText"").disabled = true;
                    document.getElementById(""ItemStatusText"").disabled = true;
                    document.getElementById(""BrandItemText"").disabled = false;
                    document.getElementById(""SupplierItemText"").disabled =");
                WriteLiteral(@" false;
                    $(""#myModal"").modal('show');
                    $(""#Update"").show();
                    $(""#Save"").hide();
                    $(""#Update_Stock"").hide();
                }
            });
        }

        function Save() {
            var item = new Object();
            item.name = $(""#ItemNameText"").val();
            item.type = $(""#ItemTypeText"").val();
            item.stock = $(""#ItemStockText"").val();
            item.information = $(""#ItemIformationText"").val();
            item.status = $(""#ItemStatusText"").val();
            item.brand_id = $(""#BrandItemText"").val();
            item.supplier_id = $(""#SupplierItemText"").val();
            $.ajax({
                ""url"": ""/Items/Create"",
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": item
            }).then((result) => {
                if (result.data[0] != 0) {
                    Swal.fire(
                        'Success!',
                  ");
                WriteLiteral(@"      'Your file has been inserted.',
                        'success'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
                }
                else {
                    Swal.fire(
                        'Failed!',
                        'Your file not inserted.',
                        'failed'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
                }
                $(""#myModal"").modal('hide');
            })
        }

        function Edit(Id) {
            debugger
            var item = new Object();
            item.id = $(""#ItemIdText"").val();
            item.name = $(""#ItemNameText"").val();
            item.type = $(""#ItemTypeText"").val();
            item.stock = $(""#ItemStockText"").val();
            item.information = $(""#ItemIformationText"").val();
            item.brand_id = $(""#BrandItemText"").val();
");
                WriteLiteral(@"            item.supplier_id = $(""#SupplierItemText"").val();
            if (item.stock == 0) {
                item.status = $(""#ItemStatusText"").val('Out of Stock');
            }
            else{
                item.status = $(""#ItemStatusText"").val('Available');
            }
            item.status = $(""#ItemStatusText"").val();
            $.ajax({
                ""url"": ""/Items/Edit/"" + Id,
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": item
            }).then((result) => {
                if (result.data != 0) {
                    Swal.fire(
                        'Success!',
                        'Your file has been updated.',
                        'success'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
                }
                else {
                    Swal.fire(
                        'Failed!',
                        'Your file not up");
                WriteLiteral(@"dated.',
                        'failed'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
                }
                $(""#myModal"").modal('hide');
            })
        }

        function Delete(Id) {
            Swal.fire({
                title: 'Are you sure?',
                text: ""You won't be able to revert this!"",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        ""url"": ""/Items/Delete/"",
                        ""datatype"": ""json"",
                        ""data"": { id: Id }
                    }).then((result) => {
                        if (result.data[0] != 0) {
                            Swal.fire(
        ");
                WriteLiteral(@"                        'Success!',
                                'Your file has been deleted.',
                                'success'
                            ).then(() => {
                                $('#table').DataTable().ajax.reload();
                            })
                        }
                        else {
                            Swal.fire(
                                'Failed!',
                                'Your file not deleted.',
                                'failed'
                            ).then(() => {
                                $('#table').DataTable().ajax.reload();
                            })
                        }
                        $(""#myModal"").modal('hide');
                    })
                }
            })
        }

        function Validation_2() {
            if ($(""#ItemNameText"").val() == """" || $(""#ItemNameText"").val() == "" "") {
                Swal.fire(
                    'Failed!',
      ");
                WriteLiteral(@"              'Oops',
                    'failed'
                );
            }
            else {
                Edit($(""#ItemIdText"").val())
            }
        }

        function GetById_2(Id) {
            $.ajax({
                ""url"": ""/Items/GetById/"" + Id,
                ""type"": ""GET"",
                ""datatype"": ""json"",
                ""data"": { Id: Id }
            }).then((result) => {
                if (result.data != null) {
                    $(""#ItemIdText"").val(result.data.id);
                    $(""#ItemNameText"").val(result.data.name);
                    $(""#ItemTypeText"").val(result.data.type);
                    $(""#ItemStockText"").val(result.data.stock);
                    $(""#ItemIformationText"").val(result.data.information);
                    $(""#ItemStatusText"").val(result.data.status);
                    $(""#BrandItemText"").val(result.data.brand_id);
                    $(""#SupplierItemText"").val(result.data.supplier_id);

                 ");
                WriteLiteral(@"   document.getElementById(""ItemNameText"").disabled = true;
                    document.getElementById(""ItemTypeText"").disabled = true;
                    $('textarea[name=""infromation""]').prop('disabled', true)
                    document.getElementById(""ItemStockText"").disabled = false;
                    document.getElementById(""ItemStatusText"").disabled = true;
                    document.getElementById(""BrandItemText"").disabled = true;
                    document.getElementById(""SupplierItemText"").disabled = true;
                    $(""#myModal"").modal('show');
                    $(""#Update"").hide();
                    $(""#Save"").hide();
                    $(""#Update_Stock"").show();
                }
            });
        }

        function Edit_2(Id) {
            var item = new Object();
            item.id = $(""#ItemIdText"").val();
            item.name = $(""#ItemNameText"").val();
            item.type = $(""#ItemTypeText"").val();
            item.stock = $(""#ItemStockT");
                WriteLiteral(@"ext"").val();
            item.information = $(""#ItemIformationText"").val();
            item.brand_id = $(""#BrandItemText"").val();
            item.supplier_id = $(""#SupplierItemText"").val();
            if (item.stock == 0) {
                item.status = $(""#ItemStatusText"").val('Out of Stock');
            }
            else {
                item.status = $(""#ItemStatusText"").val('Available');
            }
            item.status = $(""#ItemStatusText"").val();
            $.ajax({
                ""url"": ""/Items/Edit_In_Out/"" + Id,
                ""type"": ""POST"",
                ""datatype"": ""json"",
                ""data"": item
            }).then((result) => {
                if (result.data != 0) {
                    Swal.fire(
                        'Success!',
                        'Your file has been updated.',
                        'success'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
          ");
                WriteLiteral(@"      }
                else {
                    Swal.fire(
                        'Failed!',
                        'Your file not updated.',
                        'failed'
                    ).then(() => {
                        $('#table').DataTable().ajax.reload();
                    })
                }
                $(""#myModal"").modal('hide');
            })
        }

    </script>
");
                EndContext();
            }
            );
            BeginContext(22313, 8, true);
            WriteLiteral("\r\n\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
